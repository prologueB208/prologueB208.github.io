{"version":3,"file":"component---src-templates-blog-page-js-466f317873ff2dd6231a.js","mappings":"uJAMMA,E,QAAkBC,GAsCxB,IApCe,YACIC,EAAAA,EAAAA,gBAAe,cAAxBC,KAYR,OACE,uBAAKC,UAAU,kBACZJ,EAAgBK,KAAI,SAACC,EAAMC,GAC1B,OAAID,EAAKE,WAEL,gBAACC,EAAiB,CAACC,IAAKH,GACtB,gBAAC,EAAAI,KAAI,CAACC,GAAIN,EAAKO,IAAKC,OAAO,SAASC,IAAI,uBACrCT,EAAKU,QAOZ,uBAAKZ,UAAU,OAAOM,IAAKH,GACzB,gBAAC,EAAAI,KAAI,CAACC,GAAIN,EAAKO,KAAMP,EAAKU,OAGhC,IAGN,EAIA,IAQMP,EAAoB,SAAH,GAAsB,IAAhBQ,EAAQ,EAARA,SAC3B,OAAO,2BAAMA,EACf,C,6CC1BA,IA3Be,SAAH,GAAc,EAARC,SAAe,EAALC,MAAuB,IAAhBF,EAAQ,EAARA,SAmBjC,OACE,uBAAKb,UAAU,kBAEb,4BAAOa,GAGb,C,yFC5BA,EAAe,IAA0B,0DCoCzC,EA9Ba,WACX,IAAMG,EAAWC,EAAAA,GACjB,OACE,gBAAC,EAAAC,YAAW,CACVC,MAAK,aASLC,OAAQ,SAAAC,GACN,OACE,uBAAKrB,UAAU,kBACb,gBAAC,EAAAO,KAAI,CAACC,GAAG,KACNQ,EACC,0BAAKA,GAEL,uBAAKM,IAAKC,EAASvB,UAAU,WAAWwB,IAAI,aAKtD,GAGN,C,+CCvBMC,EAAM,SAAH,GAAgD,IAAD,MAAzCC,EAAW,EAAXA,YAAmBX,GAAF,EAAJY,KAAW,EAALZ,OAAOF,EAAQ,EAARA,SAC/Bd,GAASD,EAAAA,EAAAA,gBAAe,cAAxBC,KAmCF6B,EAAkBF,GAAe3B,EAAK8B,aAAaH,YACnDI,EAAgC,QAApB,EAAG/B,EAAK8B,oBAAY,aAAjB,EAAmBd,MAExC,OACE,gCACE,6BAAQe,EAAkBf,EAAK,MAAMe,EAAiBf,GACtD,wBAAMgB,KAAK,cAAcC,QAASJ,IAClC,wBAAMK,SAAS,WAAWD,QAASjB,IACnC,wBAAMkB,SAAS,iBAAiBD,QAASJ,IACzC,wBAAMK,SAAS,UAAUD,QAAQ,YACjC,wBAAMD,KAAK,eAAeC,QAAQ,YAClC,wBACED,KAAK,kBACLC,SAA0B,QAAjB,EAAAjC,EAAK8B,oBAAY,OAAQ,QAAR,EAAjB,EAAmBK,cAAM,WAAR,EAAjB,EAA2BC,QAAQC,WAAQ,KAEtD,wBAAML,KAAK,gBAAgBC,QAASjB,IACpC,wBAAMgB,KAAK,sBAAsBC,QAASJ,IACzCf,EAGP,EAEAY,EAAIY,aAAe,CACjBX,YAAY,IAQd,K,iICxCaY,EAAO,SAAH,GAA4C,IAAdC,EAAI,EAA5BlB,KAAQmB,eAC7B,OAAO,gBAAC,IAAG,CAACzB,MAAOwB,EAAKE,GAAIf,YAAaa,EAAKG,SAChD,EAEA,UAlCyB,SAAH,GAGf,IAAD,IAFJrB,KAAQtB,EAAI,EAAJA,KAAsBwC,EAAI,EAApBC,eACd1B,EAAQ,EAARA,SAEA,OACE,gBAAC,IAAM,CAACA,SAAUA,EAAUC,MAAOhB,EAAK8B,aAAad,OACnD,uBAAKf,UAAU,eACb,gBAAC,IAAI,MACL,gBAAC,IAAM,OAET,2BACEA,UAAU,YACV2C,WAAS,EACTC,SAAS,6BAET,8BACE,sBAAIC,SAAS,YACVN,EAAKO,OAAOC,KAAKC,UAAU,EAAGT,EAAKO,OAAOC,KAAKE,OAAS,KAG7D,2BACA,2BACEC,wBAAyB,CAAEC,OAAQZ,EAAKa,MACxCP,SAAS,iBAKnB,C","sources":["webpack://gatsby-starter-blog/./src/components/header.js","webpack://gatsby-starter-blog/./src/components/layout.js","webpack://gatsby-starter-blog/./src/images/gatsby-icon.png","webpack://gatsby-starter-blog/./src/components/logo.js","webpack://gatsby-starter-blog/./src/components/seo.js","webpack://gatsby-starter-blog/./src/templates/blog-page.js"],"sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport setting from \"/src/utils/customizing-setting\"\n\nconst HEADER_NAV_ITEM = setting.pages\n\nconst Header = () => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `\n  )\n\n  return (\n    <div className=\"page-container\">\n      {HEADER_NAV_ITEM.map((item, index) => {\n        if (item.isExternal) {\n          return (\n            <HeaderNavListItem key={index}>\n              <Link to={item.url} target=\"_blank\" rel=\"noopener noreferrer\">\n                {item.label}\n              </Link>\n            </HeaderNavListItem>\n          )\n        }\n\n        return (\n          <div className=\"page\" key={index}>\n            <Link to={item.url}>{item.label}</Link>\n          </div>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default Header\n\nconst HeaderNavList = ({ children }) => {\n  return (\n    <div>\n      <div>{children}</div>\n    </div>\n  )\n}\n\nconst HeaderNavListItem = ({ children }) => {\n  return <div>{children}</div>\n}\n","import * as React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Layout = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  // const isRootPath = location.pathname === rootPath\n  // let header\n\n  // if (isRootPath) {\n  //   header = (\n  //     <h1 className=\"main-heading\">\n  //       <Link to=\"/\">{title}</Link>\n  //     </h1>\n  //   )\n  // } else {\n  //   header = (\n  //     <Link className=\"header-link-home\" to=\"/\">\n  //       {title}\n  //     </Link>\n  //   )\n  // }\n\n  return (\n    <div className=\"global-wrapper\">\n      {/* <header className=\"global-header\">{header}</header> */}\n      <main>{children}</main>\n    </div>\n  )\n}\n\nexport default Layout\n","export default __webpack_public_path__ + \"static/gatsby-icon-8fb027d91d1fd0bc7fe0eb613a8e7a8d.png\";","import { StaticQuery, Link, graphql } from \"gatsby\"\nimport { StaticImage } from \"gatsby-plugin-image\"\nimport React from \"react\"\nimport customizing from \"../utils/customizing-setting.json\"\nimport logoImg from \"../images/gatsby-icon.png\"\n\nconst Logo = () => {\n  const logoText = customizing.logo\n  return (\n    <StaticQuery\n      query={graphql`\n        query TitleQuery {\n          site {\n            siteMetadata {\n              title\n            }\n          }\n        }\n      `}\n      render={data => {\n        return (\n          <div className=\"logo-container\">\n            <Link to=\"/\">\n              {logoText ? (\n                <h3>{logoText}</h3>\n              ) : (\n                <img src={logoImg} className=\"logo-img\" alt=\"logoImg\" />\n              )}\n            </Link>\n          </div>\n        )\n      }}\n    />\n  )\n}\n\nexport default Logo\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, lang, title, children }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter {\n                title\n                url\n                username\n              }\n              github {\n                title\n                url\n                username\n              }\n              instagram {\n                title\n                url\n                username\n              }\n              email {\n                title\n                url\n                username\n              }\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta\n        name=\"twitter:creator\"\n        content={site.siteMetadata?.social?.twitter.username || ``}\n      />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nSeo.defaultProps = {\n  description: ``,\n}\n\nSeo.propTypes = {\n  description: PropTypes.string,\n  title: PropTypes.string.isRequired,\n}\n\nexport default Seo\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport Logo from \"../components/logo\"\nimport Header from \"../components/header\"\n\nconst BlogPageTemplate = ({\n  data: { site, markdownRemark: page },\n  location,\n}) => {\n  return (\n    <Layout location={location} title={site.siteMetadata.title}>\n      <div className=\"display-row\">\n        <Logo />\n        <Header />\n      </div>\n      <article\n        className=\"blog-page\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header>\n          <h1 itemProp=\"headline\">\n            {page.fields.slug.substring(1, page.fields.slug.length - 1)}\n          </h1>\n        </header>\n        <hr />\n        <section\n          dangerouslySetInnerHTML={{ __html: page.html }}\n          itemProp=\"articleBody\"\n        />\n      </article>\n    </Layout>\n  )\n}\n\nexport const Head = ({ data: { markdownRemark: page } }) => {\n  return <Seo title={page.id} description={page.excerpt} />\n}\n\nexport default BlogPageTemplate\n\nexport const pageQuery = graphql`\n  query BlogPageBySlug($id: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      fields {\n        slug\n      }\n    }\n  }\n`\n"],"names":["HEADER_NAV_ITEM","setting","useStaticQuery","site","className","map","item","index","isExternal","HeaderNavListItem","key","Link","to","url","target","rel","label","children","location","title","logoText","customizing","StaticQuery","query","render","data","src","logoImg","alt","Seo","description","lang","metaDescription","siteMetadata","defaultTitle","name","content","property","social","twitter","username","defaultProps","Head","page","markdownRemark","id","excerpt","itemScope","itemType","itemProp","fields","slug","substring","length","dangerouslySetInnerHTML","__html","html"],"sourceRoot":""}